name: Website Build

on:
  pull_request:
    paths:
      - 'packages/**/*'
      - '.github/**'
      - 'package.json'
      - 'yarn.lock'
      - README.md
  push:
    branches: [main]
    paths:
      - 'packages/**/*'
      - '.github/**'
      - 'package.json'
      - 'yarn.lock'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: volta-cli/action@v4
      
      # Add yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-
            
      # Add build cache
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: |
            **/dist
            **/build
            **/.cache
            **/public
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-build-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-
            
      - run: yarn
      
      - name: Build
        run: yarn build
        
      - name: Lint
        run: yarn lint
        
      - name: Test
        run: yarn test
        
      - name: Cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: packages/website
          start: yarn test-cypress
          install-command: yarn install
          browser: chrome
          wait-on: 'http://localhost:8000'
          wait-on-timeout: 120
          cache-key: cypress-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  node-compatibility:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}
          yarn-version: 3.6.4
      
      # Add yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-
      
      - run: yarn
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test
      - name: Cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: packages/website
          start: yarn test-cypress
          install-command: yarn install
          browser: chrome
          wait-on: 'http://localhost:8000'
          wait-on-timeout: 120
          cache-key: cypress-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  os-compatibility:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            node-version: 20
          - os: ubuntu-latest
            node-version: 20
    steps:
      - uses: actions/checkout@v4
      - uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}
          yarn-version: 3.6.4
      
      # Add yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-node-${{ matrix.node-version }}-yarn-
            ${{ matrix.os }}-node-${{ matrix.node-version }}-
            ${{ matrix.os }}-

  ts-compatibility:
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
        typescript-version: [beta, next]
        include:
          - typescript-version: beta
            experimental: false
            name: 'ts-beta'
          - typescript-version: next
            experimental: true
            name: 'ts-canary'
    steps:
      - uses: actions/checkout@v4
      - uses: volta-cli/action@v4
        with:
          node-version: ${{ matrix.node-version }}
          yarn-version: 3.6.4
      
      # Add yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-ts-${{ matrix.typescript-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-ts-${{ matrix.typescript-version }}-yarn-
            ${{ runner.os }}-node-${{ matrix.node-version }}-ts-${{ matrix.typescript-version }}-
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-

  publish:
    needs: [build, os-compatibility, node-compatibility, ts-compatibility]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: volta-cli/action@v4
        with:
          node-version: 20.x
          yarn-version: 3.6.4
      
      # Add yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        
      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-20-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-20-yarn-
            ${{ runner.os }}-node-20-
            ${{ runner.os }}-
      
      - run: yarn
      
      - name: Build
        run: yarn workspace website run build-prod
        
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          publish_dir: ./packages/website/public
          cname: www.typescript-training.com
