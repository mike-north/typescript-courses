{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/course/making-typescript-stick/05-does-it-compile/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","name":"TypeScript Fundamentals v3","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"fundamentals-v4","name":"TypeScript Fundamentals v4","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","name":"Intermediate TypeScript v1","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"intermediate-v2","name":"Intermediate TypeScript v2","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"making-typescript-stick","name":"Making TypeScript Stick","summary":"Tackle a series of challenges designed to reinforce your knowledge and make\nthe important concepts truly \"stick\" in your mind.\n"},{"id":"enterprise-v2","name":"Enterprise-Scale TypeScript v2","summary":"Learn how to manage large TypeScript code bases with confidence and ease.\nIn this course, Mike shares his knowledge from years of experience working\nwith teams who maintain TypeScript projects with hundreds of regular full-time\ncontributors and 100K+ lines of code.\n"},{"id":"full-stack-typescript","name":"Full Stack TypeScript","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"}]}},"markdownRemark":{"id":"118fa135-2a06-5472-808b-d0dc221de7e2","excerpt":"Example 1 Yes, this will compile. Unfortunately, obviously NaN is a number in JavaScript. Example 2 Yes, this will compile. Unfortunately, because tuples are a…","html":"<h2 id=\"example-1\" style=\"position:relative;\"><a href=\"#example-1\" aria-label=\"example 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 1</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">let</span><span style=\"color: #24292F\"> age </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">38</span></div><div class='line'><span style=\"color: #24292F\">age </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">Number</span><span style=\"color: #24292F\">.NaN</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>Yes, this will compile</strong>. Unfortunately, obviously <a href=\"https://en.wikipedia.org/wiki/NaN\"><code>NaN</code></a> is a number in JavaScript.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">let</span><span style=\"color: #24292F\"> <data-lsp lsp='let age: number' >age</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">38</span></div><div class='line'><span style=\"color: #24292F\"><data-lsp lsp='let age: number' >age</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='var Number: NumberConstructor' >Number</data-lsp></span><span style=\"color: #24292F\">.<data-lsp lsp='(property) NumberConstructor.NaN: number' >NaN</data-lsp></span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/DYUwLgBAhg5iEF4IGYAcAoW8kDkCuAtgEYgBOAdDlDkA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-2\" style=\"position:relative;\"><a href=\"#example-2\" aria-label=\"example 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 2</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">vector3</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> [</span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">] </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> [</span><span style=\"color: #0550AE\">3</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">4</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">5</span><span style=\"color: #24292F\">]</span></div><div class='line'></div><div class='line'><span style=\"color: #24292F\">vector3.</span><span style=\"color: #8250DF\">push</span><span style=\"color: #24292F\">(</span><span style=\"color: #0550AE\">6</span><span style=\"color: #24292F\">)</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>Yes, this will compile</strong>. Unfortunately, because tuples are a specialized flavor\nof arrays (and at runtime, they actually are just regular arrays) they expose the\nentire array API. Look at the type signature of <code>.push()</code></p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='const vector3: [number, number, number]' >vector3</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> [</span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">] </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> [</span><span style=\"color: #0550AE\">3</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">4</span><span style=\"color: #24292F\">, </span><span style=\"color: #0550AE\">5</span><span style=\"color: #24292F\">]</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #24292F\"><data-lsp lsp='const vector3: [number, number, number]' >vector3</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) Array&lt;number>.push(...items: number[]): number' >push</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0550AE\">6</span><span style=\"color: #24292F\">)</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYewdgzgLgBAbgU2FEAnAzALhgbTAVwFsAjBVAGhgJLMutNQF0YBeXdSgFkoFZGAofomRp0AOgAO+CAAsAFADYAlEA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-3\" style=\"position:relative;\"><a href=\"#example-3\" aria-label=\"example 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 3</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Color</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">red</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">green</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">blue</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">interface</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Color</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">alpha</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will not compile</strong>.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-err><data-lsp lsp='type Color = {&#10;    red: number;&#10;    green: number;&#10;    blue: number;&#10;}' >Color</data-lsp></data-err></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {</span></div><span class=\"error\"><span>Duplicate identifier 'Color'.</span><span class=\"code\">2300</span></span><span class=\"error-behind\">Duplicate identifier 'Color'.</span><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) red: number' >red</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) green: number' >green</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) blue: number' >blue</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">interface</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-err><data-lsp lsp='interface Color' >Color</data-lsp></data-err></span><span style=\"color: #24292F\"> {</span></div><span class=\"error\"><span>Duplicate identifier 'Color'.</span><span class=\"code\">2300</span></span><span class=\"error-behind\">Duplicate identifier 'Color'.</span><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Color.alpha: number' >alpha</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYAMWBQAXATwAdJQBhOAGwVAF5QBvXUUaSAE1QDsBXAWwBGMFqADm7SNx4Dh0UYKq9IMoSIC+uXAEtu+GADMAhgGMylGtCaijVYgAsjqubnVA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-4\" style=\"position:relative;\"><a href=\"#example-4\" aria-label=\"example 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 4</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">friends</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\">[]</span></div><div class='line'></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> name</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will not compile</strong>.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Person.name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-err><data-lsp lsp='(property) Person.friends: Person[]' >friends</data-lsp></data-err></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\">[]</span></div><span class=\"error\"><span>Property 'friends' has no initializer and is not definitely assigned in the constructor.</span><span class=\"code\">2564</span></span><span class=\"error-behind\">Property 'friends' has no initializer and is not definitely assigned in the constructor.</span><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) Person.name: string' >name</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string' >name</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwFYBsAWAUAMYA2AhooqAAoyJwB2oA3nqKHSQLaSqIAu0ASzoBzFqABmgyHQAmKKjXoBtALp4xBen2gBXArwQAKdlx78hwgJRMxrXgAsBiAHQnIoALxtOkMQF88PyA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-5\" style=\"position:relative;\"><a href=\"#example-5\" aria-label=\"example 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 5</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">abstract</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">abstract</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Student</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">extends</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[] </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> [</span><span style=\"color: #0A3069\">\"Mike North\"</span><span style=\"color: #24292F\">]</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will not compile</strong>.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">abstract</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">abstract</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='(property) Person.name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Student' >Student</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">extends</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-err><data-lsp lsp='(property) Student.name: string | string[]' >name</data-lsp></data-err></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[] </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> [</span><span style=\"color: #0A3069\">\"Mike North\"</span><span style=\"color: #24292F\">]</span></div><span class=\"error\"><span>Property 'name' in type 'Student' is not assignable to the same property in base type 'Person'.\n  Type 'string | string[]' is not assignable to type 'string'.\n    Type 'string[]' is not assignable to type 'string'.</span><span class=\"code\">2416</span></span><span class=\"error-behind\">Property 'name' in type 'Student' is not assignable to the same property in base type 'Person'.\n  Type 'string | string[]' is not assignable to type 'string'.\n    Type 'string[]' is not assignable to type 'string'.</span><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwBYCMA2AUAIYBGiALtAQMamiUA2BiioACjInAHagDeeooAA4BXInQCWlUMTIVqoTgQC2kVLPGcA5ngC+ePPUbMAyqWEATSJxqQAHqSvnmbJF178hoiVMUq15DU1QAB9QdS0AbQBdUABeUAiAIgBZcQBrSFAAOQRSAAtEqN0gA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-6\" style=\"position:relative;\"><a href=\"#example-6\" aria-label=\"example 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 6</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">interface</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Color</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">red</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">green</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">blue</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">printColor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">color</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Color</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #6E7781\">// ... //</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #8250DF\">printColor</span><span style=\"color: #24292F\">({</span></div><div class='line'><span style=\"color: #24292F\">  red: </span><span style=\"color: #0550AE\">255</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  green: </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  blue: </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  alpha: </span><span style=\"color: #0550AE\">0.4</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">})</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will not compile</strong>.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">interface</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface Color' >Color</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Color.red: number' >red</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Color.green: number' >green</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Color.blue: number' >blue</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function printColor(color: Color): void' >printColor</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) color: Color' >color</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface Color' >Color</data-lsp></span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #6E7781\">// ... //</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #8250DF\"><data-lsp lsp='function printColor(color: Color): void' >printColor</data-lsp></span><span style=\"color: #24292F\">({</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(property) Color.red: number' >red</data-lsp>: </span><span style=\"color: #0550AE\">255</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(property) Color.green: number' >green</data-lsp>: </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(property) Color.blue: number' >blue</data-lsp>: </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  <data-err><data-lsp lsp='(property) alpha: number' >alpha</data-lsp></data-err>: </span><span style=\"color: #0550AE\">0.4</span><span style=\"color: #24292F\">,</span></div><span class=\"error\"><span>Object literal may only specify known properties, and 'alpha' does not exist in type 'Color'.</span><span class=\"code\">2353</span></span><span class=\"error-behind\">Object literal may only specify known properties, and 'alpha' does not exist in type 'Color'.</span><div class='line'><span style=\"color: #24292F\">})</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYAsBWdGcMAoASwDsAXGAMwEMBjSUAYTgBsFQBvI0UaSABNUZAK4BbAEYxeoAOYDIZEROnRZktqMgqpMgL5Ei1UWXoUScMqAAO0chVYdoACnrsEqJwgCU3WSCgAHQhoCBEhkR2Dt6uPHwCwug4OAA0sgqQSqgADOl8mtq5+aC0bDYAFrS5QVjp+j5AA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-7\" style=\"position:relative;\"><a href=\"#example-7\" aria-label=\"example 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 7</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Color</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">red</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">green</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">blue</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">ColorValue</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">implements</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">Color</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">red</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">green</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">blue</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  ) {}</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>Yes, this will compile</strong>.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">type</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='type Color = {&#10;    red: number;&#10;    green: number;&#10;    blue: number;&#10;}' >Color</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) red: number' >red</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) green: number' >green</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) blue: number' >blue</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class ColorValue' >ColorValue</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">implements</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='type Color = {&#10;    red: number;&#10;    green: number;&#10;    blue: number;&#10;}' >Color</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='(property) ColorValue.red: number' >red</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='(property) ColorValue.green: number' >green</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #CF222E\">public</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='(property) ColorValue.blue: number' >blue</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  ) {}</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/C4TwDgpgBAwg9gGzgJygXigbwFBSsiAEwC4oA7AVwFsAjCZXKAcwIjNMtvsZoQog7U6DAL7ZsAYwQBDAM6zYiFADVpfaAEsqYBBCptgC+ElQ48EuGVnBkFCcBQAKRnjAVeGifiKCuyADQuUG4eXiwQbL7CgXiu7gieULz8Udx4AJRYYiJAA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-8\" style=\"position:relative;\"><a href=\"#example-8\" aria-label=\"example 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 8</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">export</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"\"</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">interface</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">age</span><span style=\"color: #CF222E\">?:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will NOT compile</strong>. When one part of a merged declaration is\nexported, all other\nparts must be exported as well.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">export</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-err><data-lsp lsp='class Person' >Person</data-lsp></data-err></span><span style=\"color: #24292F\"> {</span></div><span class=\"error\"><span>Individual declarations in merged declaration 'Person' must be all exported or all local.</span><span class=\"code\">2395</span></span><span class=\"error-behind\">Individual declarations in merged declaration 'Person' must be all exported or all local.</span><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Person.name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"\"</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">interface</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-err><data-lsp lsp='class Person&#10;interface Person' >Person</data-lsp></data-err></span><span style=\"color: #24292F\"> {</span></div><span class=\"error\"><span>Individual declarations in merged declaration 'Person' must be all exported or all local.</span><span class=\"code\">2395</span></span><span class=\"error-behind\">Individual declarations in merged declaration 'Person' must be all exported or all local.</span><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-lsp lsp='(property) Person.age?: number | undefined' >age</data-lsp></span><span style=\"color: #CF222E\">?:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYCcBWAUJAB4AOCALqAMYA2AhooqAAoyJwB2oA3nqKO7QC2kVIjLQAluwDmoALygARIrwBfPHilkYAM1qVIzVh269QtaZAD8qdgFdBAIxhqgA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-9\" style=\"position:relative;\"><a href=\"#example-9\" aria-label=\"example 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 9</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">userId</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">// Fetch user's name from an API endpoint</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #8250DF\">fetch</span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">`/api/user-info/${</span><span style=\"color: #24292F\">userId</span><span style=\"color: #0A3069\">}`</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #24292F\">      .</span><span style=\"color: #8250DF\">then</span><span style=\"color: #24292F\">((</span><span style=\"color: #953800\">resp</span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">=&gt;</span><span style=\"color: #24292F\"> resp.</span><span style=\"color: #8250DF\">json</span><span style=\"color: #24292F\">())</span></div><div class='line'><span style=\"color: #24292F\">      .</span><span style=\"color: #8250DF\">then</span><span style=\"color: #24292F\">((</span><span style=\"color: #953800\">info</span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">=&gt;</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">        </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> info.name </span><span style=\"color: #6E7781\">// set the user's name</span></div><div class='line'><span style=\"color: #24292F\">      })</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will NOT compile</strong>. The callback passed to <code>.then</code> is not\nregarded as a “definite assignment”. In fact, all callbacks are treated this way.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\"><data-err><data-lsp lsp='(property) Person.name: string' >name</data-lsp></data-err></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><span class=\"error\"><span>Property 'name' has no initializer and is not definitely assigned in the constructor.</span><span class=\"code\">2564</span></span><span class=\"error-behind\">Property 'name' has no initializer and is not definitely assigned in the constructor.</span><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) userId: string' >userId</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #6E7781\">// Fetch user&apos;s name from an API endpoint</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #8250DF\"><data-lsp lsp='function fetch(input: RequestInfo | URL, init?: RequestInit): Promise&lt;Response>' >fetch</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">`/api/user-info/${</span><span style=\"color: #24292F\"><data-lsp lsp='(parameter) userId: string' >userId</data-lsp></span><span style=\"color: #0A3069\">}`</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #24292F\">      .</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) Promise&lt;Response>.then&lt;any, never>(onfulfilled?: ((value: Response) => any) | null | undefined, onrejected?: ((reason: any) => PromiseLike&lt;never>) | null | undefined): Promise&lt;any>' >then</data-lsp></span><span style=\"color: #24292F\">((</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) resp: Response' >resp</data-lsp></span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">=&gt;</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) resp: Response' >resp</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) Body.json(): Promise&lt;any>' >json</data-lsp></span><span style=\"color: #24292F\">())</span></div><div class='line'><span style=\"color: #24292F\">      .</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) Promise&lt;any>.then&lt;void, never>(onfulfilled?: ((value: any) => void | PromiseLike&lt;void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike&lt;never>) | null | undefined): Promise&lt;...>' >then</data-lsp></span><span style=\"color: #24292F\">((</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) info: any' >info</data-lsp></span><span style=\"color: #24292F\">) </span><span style=\"color: #CF222E\">=&gt;</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">        </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) Person.name: string' >name</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) info: any' >info</data-lsp>.<data-lsp lsp='any' >name</data-lsp> </span><span style=\"color: #6E7781\">// set the user&apos;s name</span></div><div class='line'><span style=\"color: #24292F\">      })</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwFYBsAWAUAMYA2AhooqAAoyJwB2oA3nqKHSQLaSqIAu0ASzoBzFqAL0+0AK4FeCABTTEMAJIATHvyHCAlEzGsQoAGKReBABahlMAOQV2XUADN4HUCQYBBSqtCQdOoADnBCvIau5lYKAAbAJMECwLbQALRCLnDAACSMqRoAvrG6kawAdLyWgQoK0JCIwfoAvAB8oPWN5QBWtHQKuqWsw6CV1f0KmXAt7cwjI1UCiOVOkKDNoFMrnGvGKrygVWupDmw7ZaCFQ5d4hUA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-10\" style=\"position:relative;\"><a href=\"#example-10\" aria-label=\"example 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 10</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">enum</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Language</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  TypeScript </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"TS\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  JavaScript,</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">enum</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Editor</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  SublimeText,</span></div><div class='line'><span style=\"color: #24292F\">  VSCode </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"vscode\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">enum</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Linter</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  ESLint,</span></div><div class='line'><span style=\"color: #24292F\">  TSLint </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"tslint\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  JSLint </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">3</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  JSHint,</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will NOT compile</strong>, but it’s probably more nuanced than you expected!</p>\n<p>Once you provide a string initializer for an enum member, all following enum\nmembers need an explicit initializer of some sort, <em>unless</em> you go back to numeric\nenum values, at which point inference takes over again.</p>\n<p>Ok, <strong>this one wasn’t really fair :)</strong></p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">enum</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='enum Language' >Language</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Language.TypeScript = \"TS\"' >TypeScript</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"TS\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  <data-err><data-lsp lsp='(enum member) Language.JavaScript' >JavaScript</data-lsp></data-err>,</span></div><span class=\"error\"><span>Enum member must have initializer.</span><span class=\"code\">1061</span></span><span class=\"error-behind\">Enum member must have initializer.</span><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">enum</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='enum Editor' >Editor</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Editor.SublimeText = 0' >SublimeText</data-lsp>,</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Editor.VSCode = \"vscode\"' >VSCode</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"vscode\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">enum</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='enum Linter' >Linter</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Linter.ESLint = 0' >ESLint</data-lsp>,</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Linter.TSLint = \"tslint\"' >TSLint</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"tslint\"</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Linter.JSLint = 3' >JSLint</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">3</span><span style=\"color: #24292F\">,</span></div><div class='line'><span style=\"color: #24292F\">  <data-lsp lsp='(enum member) Linter.JSHint = 4' >JSHint</data-lsp>,</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygIwAYBsaBQkA7AVwFtQAZAQwIHMjKbJQBvXUUAFQE8AHSAZQDG0AJY8ALqAC8oAEQd+sgDRtQAKUoA3SkNESVAX1z5iZAKIATEeIQtV-IgCMANiJKQOkAB7iV7AGr8AMJwFkwyspqIgqGQyrhGJqQUIgTiMHbsZvzkqb6qCrlp0nLiiK5p8exqOXklAMx+6vwAEnmGQA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-11\" style=\"position:relative;\"><a href=\"#example-11\" aria-label=\"example 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 11</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">handleClick</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">evt</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Event</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">$element</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> evt.target </span><span style=\"color: #CF222E\">as</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">HTMLInputElement</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">if</span><span style=\"color: #24292F\"> (</span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.value </span><span style=\"color: #CF222E\">!==</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"\"</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.value </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.value.</span><span style=\"color: #8250DF\">toUpperCase</span><span style=\"color: #24292F\">()</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will NOT compile</strong>. When you have a free-standing function like this,\nand refer to the <code>this</code> value, we need to give it a type of some sort.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function handleClick(evt: Event): void' >handleClick</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) evt: Event' >evt</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface Event' >Event</data-lsp></span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='const $element: HTMLInputElement' >$element</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) evt: Event' >evt</data-lsp>.<data-lsp lsp='(property) Event.target: EventTarget | null' >target</data-lsp> </span><span style=\"color: #CF222E\">as</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface HTMLInputElement' >HTMLInputElement</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">if</span><span style=\"color: #24292F\"> (</span><span style=\"color: #0550AE\"><data-err>this</data-err></span><span style=\"color: #24292F\">.<data-lsp lsp='any' >value</data-lsp> </span><span style=\"color: #CF222E\">!==</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"\"</span><span style=\"color: #24292F\">) {</span></div><span class=\"error\"><span>'this' implicitly has type 'any' because it does not have a type annotation.</span><span class=\"code\">2683</span></span><span class=\"error-behind\">'this' implicitly has type 'any' because it does not have a type annotation.</span><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\"><data-err>this</data-err></span><span style=\"color: #24292F\">.<data-lsp lsp='any' >value</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-err>this</data-err></span><span style=\"color: #24292F\">.<data-lsp lsp='any' >value</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='any' >toUpperCase</data-lsp></span><span style=\"color: #24292F\">()</span></div><span class=\"error\"><span>'this' implicitly has type 'any' because it does not have a type annotation.</br>'this' implicitly has type 'any' because it does not have a type annotation.</span><span class=\"code\">2683<br/>2683</span></span><span class=\"error-behind\">'this' implicitly has type 'any' because it does not have a type annotation.</br>'this' implicitly has type 'any' because it does not have a type annotation.</span><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwDYAcBmAUAGYCuAdgMYAuAlnCaABYCGJAJgDaQDCbVZA1gApIANwqoAosMgkKASlABvPKFBlaiCqAAkkDgFtpmgLygRFAHQVG0AOaRNjRKAASAFQCyAGQCSJAA5EFOL6hsqgVASgAhT0VIjmwoxsRJCgAIRGJgBEWfJKKioxcQlJKaAmRfGJyZCWcACqfn4wnI6QArJhAL54XUA'>Try</a></div></pre>\n<p>Here’s a version that would compile</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line highlight'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function handleClick(this: HTMLInputElement, evt: Event): void' >handleClick</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0550AE\"><data-lsp lsp='(parameter) this: HTMLInputElement' >this</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface HTMLInputElement' >HTMLInputElement</data-lsp></span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\"><data-lsp lsp='(parameter) evt: Event' >evt</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface Event' >Event</data-lsp></span><span style=\"color: #24292F\">) {</span></div><div class='line dim'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">const</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='const $element: HTMLInputElement' >$element</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) evt: Event' >evt</data-lsp>.<data-lsp lsp='(property) Event.target: EventTarget | null' >target</data-lsp> </span><span style=\"color: #CF222E\">as</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='interface HTMLInputElement' >HTMLInputElement</data-lsp></span></div><div class='line dim'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">if</span><span style=\"color: #24292F\"> (</span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) HTMLInputElement.value: string' >value</data-lsp> </span><span style=\"color: #CF222E\">!==</span><span style=\"color: #24292F\"> </span><span style=\"color: #0A3069\">\"\"</span><span style=\"color: #24292F\">) {</span></div><div class='line dim'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) HTMLInputElement.value: string' >value</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) HTMLInputElement.value: string' >value</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) String.toUpperCase(): string' >toUpperCase</data-lsp></span><span style=\"color: #24292F\">()</span></div><div class='line dim'><span style=\"color: #24292F\">  }</span></div><div class='line dim'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/GYVwdgxgLglg9mABACwIZgCYBsCmBhLGCAawAopkYBnALkQAkAVAWQBkBJMABxCgFFcAWxxgoAGkQ4AblDp8pIqAEpEAbwBQiRBARUoiACQ4hixAF5JMgHRRUAJwDmOfaioMWHbrwE5hozYgwwIjklFRWUqhYIDiIAIRmFgBESSoaWloU1BFRMeaIWeGR0Tg2cACqXFw4dniuOKRKAQC+6s1AA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-12\" style=\"position:relative;\"><a href=\"#example-12\" aria-label=\"example 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 12</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">private</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">age</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">age</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> name</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.age </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> age</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Student</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">extends</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[]</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">private</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">age</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\">age</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">null</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">super</span><span style=\"color: #24292F\">(name, age </span><span style=\"color: #CF222E\">||</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> name</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.age </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> age</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>No, this will NOT compile</strong>. Because TS <code>private</code> fields are just “checked\nfor access at build time”\nand are totally accessible outside the class at runtime, there’s a collision\nbetween the two <code>age</code> members.</p>\n<p>As a result <code>Student</code> is not a valid subclass of <code>Person</code></p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">private</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='(property) Person.age: number' >age</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\"><data-lsp lsp='(parameter) age: number' >age</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string' >name</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) Person.age: number' >age</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) age: number' >age</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-err><data-lsp lsp='class Student' >Student</data-lsp></data-err></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">extends</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><span class=\"error\"><span>Class 'Student' incorrectly extends base class 'Person'.\n  Types have separate declarations of a private property 'age'.</span><span class=\"code\">2415</span></span><span class=\"error-behind\">Class 'Student' incorrectly extends base class 'Person'.\n  Types have separate declarations of a private property 'age'.</span><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[]</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">private</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='(property) Student.age: number' >age</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">, </span><span style=\"color: #953800\"><data-lsp lsp='(parameter) age: number | null' >age</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">number</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">null</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">super</span><span style=\"color: #24292F\">(<data-lsp lsp='(parameter) name: string' >name</data-lsp>, <data-lsp lsp='(parameter) age: number | null' >age</data-lsp> </span><span style=\"color: #CF222E\">||</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">0</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string' >name</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.<data-lsp lsp='(property) Student.age: number' >age</data-lsp> </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) age: number | null' >age</data-lsp></span></div><span class=\"error\"><span>Type 'number | null' is not assignable to type 'number'.\n  Type 'null' is not assignable to type 'number'.</span><span class=\"code\">2322</span></span><span class=\"error-behind\">Type 'number | null' is not assignable to type 'number'.\n  Type 'null' is not assignable to type 'number'.</span><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwBYCMBWdBmNNAKAGMAbAQ0UVAAUZE4A7UAb2NFAGJnKBbSKkQAXaAEtmAc06gADhIBulEZFCUpQ0MwCu-AEYxZpFqOg7SIhAAo+g4WMlSANOs2pdBmAEp2sriIAFuKIAHS8AmoAvNqR-qBBIaEa0W6QsgC+xFlkVDSgAMoiOgAmkMwioJAAHqrMJbQMSCx+XBH2oGZOoAA+nY7SANoAurIK4sqqaR56htDExqZiFlbQtpEOEtKuKTNe0L3aOuTkvhxcXIg6cjDrgjuavX0ADN7xiWHtqXbpFwnBYRSoBiKUy2SAA'>Try</a></div></pre>\n</details>\n<div class=\"custom-block vspace\"><div class=\"custom-block-body\"></div></div>\n<h2 id=\"example-13\" style=\"position:relative;\"><a href=\"#example-13\" aria-label=\"example 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example 13</h2>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> name</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\">makeName</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[])</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">if</span><span style=\"color: #24292F\"> (</span><span style=\"color: #0550AE\">Array</span><span style=\"color: #24292F\">.</span><span style=\"color: #8250DF\">isArray</span><span style=\"color: #24292F\">(name)) </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> name.</span><span style=\"color: #8250DF\">join</span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\" \"</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">else</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> name</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\">Student</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">extends</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">Person</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[]</span></div><div class='line'></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\">name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[]) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">super</span><span style=\"color: #24292F\">(</span><span style=\"color: #8250DF\">makeName</span><span style=\"color: #24292F\">(name))</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> name</span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code></div></pre>\n<details>\n  <summary>Click here for the answer</summary>\n<p><strong>Yes, this will compile</strong>. Because Ecma <code>#private</code> fields are not visible,\neven at runtime, outside of the class, there’s no collision between the\ntwo <code>#name</code> members.</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292f\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) name: string' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string' >name</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">function</span><span style=\"color: #24292F\"> </span><span style=\"color: #8250DF\"><data-lsp lsp='function makeName(name: string | string[]): string' >makeName</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) name: string | string[]' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[])</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">if</span><span style=\"color: #24292F\"> (</span><span style=\"color: #0550AE\"><data-lsp lsp='var Array: ArrayConstructor' >Array</data-lsp></span><span style=\"color: #24292F\">.</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) ArrayConstructor.isArray(arg: any): arg is any[]' >isArray</data-lsp></span><span style=\"color: #24292F\">(<data-lsp lsp='(parameter) name: string | string[]' >name</data-lsp>)) </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string[]' >name</data-lsp>.</span><span style=\"color: #8250DF\"><data-lsp lsp='(method) Array&lt;string>.join(separator?: string): string' >join</data-lsp></span><span style=\"color: #24292F\">(</span><span style=\"color: #0A3069\">\" \"</span><span style=\"color: #24292F\">)</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">else</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">return</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string' >name</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #CF222E\">class</span><span style=\"color: #24292F\"> </span><span style=\"color: #953800\"><data-lsp lsp='class Student' >Student</data-lsp></span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">extends</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\"><data-lsp lsp='class Person' >Person</data-lsp></span><span style=\"color: #24292F\"> {</span></div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #953800\">#name</span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[]</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #24292F\">  </span><span style=\"color: #CF222E\">constructor</span><span style=\"color: #24292F\">(</span><span style=\"color: #953800\"><data-lsp lsp='(parameter) name: string | string[]' >name</data-lsp></span><span style=\"color: #CF222E\">:</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\"> </span><span style=\"color: #CF222E\">|</span><span style=\"color: #24292F\"> </span><span style=\"color: #0550AE\">string</span><span style=\"color: #24292F\">[]) {</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">super</span><span style=\"color: #24292F\">(</span><span style=\"color: #8250DF\"><data-lsp lsp='function makeName(name: string | string[]): string' >makeName</data-lsp></span><span style=\"color: #24292F\">(<data-lsp lsp='(parameter) name: string | string[]' >name</data-lsp>))</span></div><div class='line'><span style=\"color: #24292F\">    </span><span style=\"color: #0550AE\">this</span><span style=\"color: #24292F\">.#name </span><span style=\"color: #CF222E\">=</span><span style=\"color: #24292F\"> <data-lsp lsp='(parameter) name: string | string[]' >name</data-lsp></span></div><div class='line'><span style=\"color: #24292F\">  }</span></div><div class='line'><span style=\"color: #24292F\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYGwhgzhAEAKCmAnCB7AdtA3gKGtAxGmALbwBc0EALogJZoDmu0w61iArsFSogBRFSFdvQYBKLMzxUAFrQgA6QiXjQAvNEHxmAX2x7sAMw5putdNGJgA1vAByKgSuE1R0AD6VXjANoBdMRc6Rkk8WkNoPgBBREQwAE8FeRi4+KdSMQlEeCoORAwtBQArFHo+ACJocrFmeBAIVWzc-M0VfWxsUEgYAGVcgBN4NCpoeAAPKiH+mARkCxw8ZSEvYIYPFdF-DrxWNHYuHn4tILdPEV8A0LxKDgAHJD4rWwdSdPhMqWhZeSUtdVbSLp9EA'>Try</a></div></pre>\n</details>","tableOfContents":"<ul>\n<li><a href=\"#example-1\">Example 1</a></li>\n<li><a href=\"#example-2\">Example 2</a></li>\n<li><a href=\"#example-3\">Example 3</a></li>\n<li><a href=\"#example-4\">Example 4</a></li>\n<li><a href=\"#example-5\">Example 5</a></li>\n<li><a href=\"#example-6\">Example 6</a></li>\n<li><a href=\"#example-7\">Example 7</a></li>\n<li><a href=\"#example-8\">Example 8</a></li>\n<li><a href=\"#example-9\">Example 9</a></li>\n<li><a href=\"#example-10\">Example 10</a></li>\n<li><a href=\"#example-11\">Example 11</a></li>\n<li><a href=\"#example-12\">Example 12</a></li>\n<li><a href=\"#example-13\">Example 13</a></li>\n</ul>","fields":{"slug":"/course/making-typescript-stick/05-does-it-compile/"},"frontmatter":{"title":"Game 1: Does it compile?","course":"making-typescript-stick","date":"March 22, 2022","description":"Let's play a game! We'll look at a few TypeScript code samples and see if we\ncan figure out if they will compile\n"}}},"pageContext":{"slug":"/course/making-typescript-stick/05-does-it-compile/","title":"Game 1: Does it compile?","course":"making-typescript-stick","order":5,"previous":{"fields":{"slug":"/course/making-typescript-stick/04-data-layer-challenge/"},"frontmatter":{"title":"Challenge 1: Building a typed data store","order":4,"course":"making-typescript-stick","isExercise":null}},"next":{"fields":{"slug":"/course/making-typescript-stick/06-jquery-challenge/"},"frontmatter":{"title":"Challenge 2: Typing jQuery","order":6,"course":"making-typescript-stick","isExercise":null}}}},
    "staticQueryHashes": ["2785745750","2841359383"]}