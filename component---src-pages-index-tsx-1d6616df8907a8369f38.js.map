{"version":3,"file":"component---src-pages-index-tsx-1d6616df8907a8369f38.js","mappings":"yIA8EA,IAjEsDA,IAI/C,IAJgD,SACrDC,EAAQ,MACRC,EAAK,SACLC,GACDH,EAEC,IAAII,EAyCJ,OAtCEA,EAJe,MAGbH,EAASI,SAETC,EAAAA,cAAA,MACEC,MAAO,KACFC,EAAAA,EAAAA,IAAM,KACTC,cAAcC,EAAAA,EAAAA,IAAO,KACrBC,UAAW,IAGbL,EAAAA,cAACM,EAAAA,KAAI,CACHL,MAAO,CACLM,UAAW,OACXC,MAAO,WAETC,GAAI,KAEHb,IAMLI,EAAAA,cAAA,MACEC,MAAO,CACLI,UAAW,IAGbL,EAAAA,cAACM,EAAAA,KAAI,CACHL,MAAO,CACLM,UAAW,OACXC,MAAO,WAETC,GAAI,KAEHb,IAMPI,EAAAA,cAAA,OACEC,MAAO,CACLS,WAAY,OACZC,YAAa,OACbC,UAAUR,EAAAA,EAAAA,IAAO,IACjBS,QAAS,IAAGT,EAAAA,EAAAA,IAAO,SAAQA,EAAAA,EAAAA,IAAO,EAAI,OAGxCJ,EAAAA,cAAA,cAASF,GACTE,EAAAA,cAAA,YAAOH,GACPG,EAAAA,cAAA,cAAQ,MACH,IAAIc,MAAOC,cAAc,wBAE1B,C,6FCsDV,UAtEIrB,IAAyB,IAAxB,KAAEsB,EAAI,SAAErB,GAAUD,EACrB,MAAMuB,EAAYD,EAAKE,KAAKC,aAAavB,OACnC,aAAEwB,EAAY,QAAEC,GAAYL,EAAKE,KAAKC,aACtCG,EAKF,CAAC,EACCC,EAA2C,CAAC,EAgBlD,OAfAF,EACGG,QAAQC,GAAMA,EAAEC,uBAChBC,SAASF,IACRF,EAAUE,EAAEG,IAAMH,CAAC,IAEvBL,EAAaO,SAASE,IACpBP,EAAeO,EAAGD,IAAM,CACtBE,QAASP,EAAUM,EAAGE,eAClBR,EAAUM,EAAGE,eACb,KACJV,QAASQ,EAAGR,QAAQW,KAAKP,GAAMF,EAAUE,KAC1C,IAKDzB,EAAAA,cAACiC,EAAAA,EAAM,CAACtC,SAAUA,EAAUC,MAAOqB,GACjCjB,EAAAA,cAACkC,EAAAA,EAAG,CAACtC,MAAM,YACXI,EAAAA,cAACmC,EAAAA,EAAG,MACHf,EACEI,QACEC,GAAMH,EAAeG,EAAEG,IAAIP,QAAQe,OAAS,IAE9CC,MACC,CAACC,EAAGC,IAAMD,EAAEE,iBAAmBD,EAAEC,mBAElCR,KAAIS,IAAa,IAAZ,GAAEb,GAAIa,EACV,MAAM,QAAEX,GAAYR,EAAeM,GACnC,OAAKE,EAEH9B,EAAAA,cAAA,WAAS0C,UAAU,iBAAiBC,IAAKf,GACvC5B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEC,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3BJ,EAAAA,cAAA,OACEC,MAAO,CAAE2C,MAAO,SAChBC,MAAO,IACPC,IAAKhB,EAAQiB,cAEf/C,EAAAA,cAACM,EAAAA,KAAI,CACHL,MAAO,CAAEM,UAAW,QACpBE,GAAI,UAAUqB,EAAQF,MAErBE,EAAQkB,QAIfhD,EAAAA,cAAA,eACEA,EAAAA,cAAA,SAAI8B,EAAQmB,WAvBG,IAyBT,IAGT,C","sources":["webpack://website/./src/components/layout.tsx","webpack://website/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\n\ninterface ILayoutProps {\n  location: {\n    pathname: string;\n  };\n  title: string;\n  children?: React.ReactNode;\n}\n\nconst Layout: React.FunctionComponent<ILayoutProps> = ({\n  location,\n  title,\n  children,\n}) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath) {\n    header = (\n      <h1\n        style={{\n          ...scale(1.5),\n          marginBottom: rhythm(1.5),\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <h3\n        style={{\n          marginTop: 0,\n        }}\n      >\n        <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n      </h3>\n    );\n  }\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(30),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} All Rights Reserved\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport {\n  ICourse,\n  ICourseGroup,\n} from '../templates/course-page';\n\ntype IAbbrevCourse = Pick<\n  ICourse,\n  | 'id'\n  | 'name'\n  | 'squareImage'\n  | 'summary'\n  | 'visibleInCourseIndex'\n>;\ntype IAbbrevCourseGroup = Pick<\n  ICourseGroup,\n  | 'id'\n  | 'name'\n  | 'courseIndexOrder'\n  | 'courses'\n  | 'currentCourse'\n>;\ninterface IBlogIndexProps {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string;\n          frontmatter: {\n            title: string;\n            date: string;\n            description: string;\n          };\n          fields: { slug: string };\n        };\n      }[];\n    };\n    site: {\n      siteMetadata: {\n        title: string;\n        courseGroups: IAbbrevCourseGroup[];\n        courses: IAbbrevCourse[];\n      };\n    };\n  };\n  location: {\n    pathname: string;\n  };\n}\n\nconst BlogIndex: React.FunctionComponent<\n  IBlogIndexProps\n> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const { courseGroups, courses } = data.site.siteMetadata;\n  const courseGroupMap: {\n    [key: string]: {\n      courses: IAbbrevCourse[];\n      current: IAbbrevCourse | null;\n    };\n  } = {};\n  const courseMap: Record<string, IAbbrevCourse> = {};\n  courses\n    .filter((c) => c.visibleInCourseIndex)\n    .forEach((c) => {\n      courseMap[c.id] = c;\n    });\n  courseGroups.forEach((cg) => {\n    courseGroupMap[cg.id] = {\n      current: courseMap[cg.currentCourse]\n        ? courseMap[cg.currentCourse]\n        : null,\n      courses: cg.courses.map((c) => courseMap[c]),\n    };\n  });\n  // const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Courses\" />\n      <Bio />\n      {courseGroups\n        .filter(\n          (c) => courseGroupMap[c.id].courses.length > 0,\n        )\n        .sort(\n          (a, b) => a.courseIndexOrder - b.courseIndexOrder,\n        )\n        .map(({ id }) => {\n          const { current } = courseGroupMap[id];\n          if (!current) return null;\n          return (\n            <article className=\"course-summary\" key={id}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <img\n                    style={{ float: 'right' }}\n                    width={150}\n                    src={current.squareImage}\n                  />\n                  <Link\n                    style={{ boxShadow: `none` }}\n                    to={`course/${current.id}`}\n                  >\n                    {current.name}\n                  </Link>\n                </h3>\n              </header>\n              <section>\n                <p>{current.summary}</p>\n              </section>\n            </article>\n          );\n        })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        courseGroups {\n          id\n          name\n          courses\n          currentCourse\n          courseIndexOrder\n        }\n        courses {\n          id\n          name\n          summary\n          squareImage\n          facebookImage\n          twitterImage\n          femCourseUrl\n          femCoursePublished\n          visibleInCourseIndex\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___order], order: ASC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            order\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","location","title","children","header","pathname","React","style","scale","marginBottom","rhythm","marginTop","Link","boxShadow","color","to","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","data","siteTitle","site","siteMetadata","courseGroups","courses","courseGroupMap","courseMap","filter","c","visibleInCourseIndex","forEach","id","cg","current","currentCourse","map","Layout","SEO","Bio","length","sort","a","b","courseIndexOrder","_ref2","className","key","float","width","src","squareImage","name","summary"],"sourceRoot":""}